# -*- coding: utf-8 -*-
"""House Price Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AudioyxZDEM5R9vp8ukAcdUmjHZPhvcQ

## Imports libraries
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

"""#Get the data
- Required steps to follow:
  1. Connect google-collab to google drive
  2. Arrange the files according to directory tree as shown in Readme.md
  3. Add the created model to the directory and use it in deployment.
"""

#pd.read_csv('file_name')
data = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Machine learning/Regression/Linear Regression/USA housing/USA_Housing.csv')

from google.colab import drive
drive.mount('/content/drive')

data.head()

data.info()

data.describe()

data.columns

"""## Exploratory Data Analysis"""

sns.pairplot(data)

sns.distplot(data['Price'])

sns.heatmap(data.corr())

"""## Training a Linear Regression Model


"""

X = data[['Avg. Area Income', 'Avg. Area House Age', 'Avg. Area Number of Rooms',
               'Avg. Area Number of Bedrooms', 'Area Population']]
y = data['Price']

"""## Split Train and Test data 


"""

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=101)

"""## Creating and Training the Model"""

from sklearn.linear_model import LinearRegression

model = LinearRegression()

model.fit(X_train,y_train)

"""## Model Evaluation


"""

# print the intercept
print(model.intercept_)

coeff_df = pd.DataFrame(model.coef_,X.columns,columns=['Coefficient'])
coeff_df

"""Interpreting the coefficients:

- Holding all other features fixed, a 1 unit increase in **Avg. Area Income** is associated with an **increase of \$21.52 **.
- Holding all other features fixed, a 1 unit increase in **Avg. Area House Age** is associated with an **increase of \$164883.28 **.
- Holding all other features fixed, a 1 unit increase in **Avg. Area Number of Rooms** is associated with an **increase of \$122368.67 **.
- Holding all other features fixed, a 1 unit increase in **Avg. Area Number of Bedrooms** is associated with an **increase of \$2233.80 **.
- Holding all other features fixed, a 1 unit increase in **Area Population** is associated with an **increase of \$15.15 **.

## Predictions from our Model
"""

predictions = model.predict(X_test)

plt.scatter(y_test,predictions)

"""**Residual Histogram**"""

sns.distplot((y_test-predictions),bins=50);

"""## Regression Evaluation Metrics


"""

from sklearn import metrics

print('MAE:', metrics.mean_absolute_error(y_test, predictions))
print('MSE:', metrics.mean_squared_error(y_test, predictions))
print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))

#Store the model parameters using Pickle libraries

import pickle
pickle.dump(model, open('price_model.pkl','wb'))